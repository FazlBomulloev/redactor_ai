# routers/statistics_router.py
from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from core.repositories.article import ArticleRepository
from utils.telethon import telegram_client_wrapper

statistics_router = Router()


@statistics_router.callback_query(F.data == "statistics")
async def show_statistics(callback_query: CallbackQuery):
    try:
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ session —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
        repo_pb = ArticleRepository()

        stats = await repo_pb.get_statistics()
        stats_text = (
            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–∫–æ–≤ –∑–∞ –≤—á–µ—Ä–∞: {stats['yesterday_chars']}\n"
            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–∫–æ–≤ –∑–∞ 30 –¥–Ω–µ–π: {stats['last_30_days_chars']}\n"
            f"–°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–∫–æ–≤ –≤ –¥–µ–Ω—å: {stats['avg_chars_per_day']}\n"
            f"–°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–∫–æ–≤ –≤ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {stats['avg_chars_per_publication']}\n"
            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–π –∑–∞ –≤—á–µ—Ä–∞: {stats['yesterday_publications']}\n"
            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–π –∑–∞ 30 –¥–Ω–µ–π: {stats['last_30_days_publications']}\n"
        )

        kb = InlineKeyboardBuilder()
        kb.add(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_to_main"))

        await callback_query.message.edit_text(stats_text, reply_markup=kb.as_markup())
    except Exception as e:
        await callback_query.message.answer(f"–û—à–∏–±–∫–∞: {e}")


@statistics_router.callback_query(F.data == "statistics")
async def statistics_menu(callback_query: CallbackQuery):
    try:
        kb = InlineKeyboardBuilder()
        btn_accounts = InlineKeyboardButton(text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤", callback_data="accounts_stats")
        btn_publications = InlineKeyboardButton(text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–π", callback_data="publications_stats")
        btn_back = InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="main_menu")

        kb.row(btn_accounts)
        kb.row(btn_publications)
        kb.row(btn_back)

        await callback_query.message.edit_text(
            "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:", reply_markup=kb.as_markup()
        )
    except Exception as e:
        await callback_query.message.answer(f"–û—à–∏–±–∫–∞: {e}")


@statistics_router.callback_query(F.data == "accounts_stats")
async def accounts_statistics(callback_query: CallbackQuery):
    try:
        total_accounts = len(telegram_client_wrapper._clients)
        current_account = telegram_client_wrapper.current_client_key

        text = f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤:\n\n"
        text += f"–í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {total_accounts}\n"

        if current_account:
            text += f"–¢–µ–∫—É—â–∏–π –∞–∫–∫–∞—É–Ω—Ç: {current_account}\n\n"
            text += "–°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤:\n"
            for i, account in enumerate(telegram_client_wrapper._clients.keys(), 1):
                status = "üü¢ (–∞–∫—Ç–∏–≤–Ω—ã–π)" if account == current_account else "‚ö™"
                text += f"{i}. {account} {status}\n"
        else:
            text += "‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤\n"

        kb = InlineKeyboardBuilder()
        btn_refresh = InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="accounts_stats")
        btn_back = InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="statistics")
        kb.row(btn_refresh)
        kb.row(btn_back)

        await callback_query.message.edit_text(text, reply_markup=kb.as_markup())
    except Exception as e:
        await callback_query.message.answer(f"–û—à–∏–±–∫–∞: {e}")


@statistics_router.callback_query(F.data == "publications_stats")
async def publications_statistics(callback_query: CallbackQuery):
    try:
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—É–±–ª–∏–∫–∞—Ü–∏–π
        text = "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–π:\n\n"
        text += "–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ..."

        kb = InlineKeyboardBuilder()
        btn_back = InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="statistics")
        kb.row(btn_back)

        await callback_query.message.edit_text(text, reply_markup=kb.as_markup())
    except Exception as e:
        await callback_query.message.answer(f"–û—à–∏–±–∫–∞: {e}")
